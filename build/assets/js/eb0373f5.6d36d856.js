"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1678],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=d(a),m=l,k=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return a?n.createElement(k,i(i({ref:t},c),{},{components:a})):n.createElement(k,i({ref:t},c))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5409:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return p}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],o={sidebar_position:2},s="Local Disk Manager (LDM)",d={unversionedId:"01features/01local-disk-manager",id:"01features/01local-disk-manager",title:"Local Disk Manager (LDM)",description:"Local Disk Manager (LDM) is one of modules of HwameiStor. LDM is to simplify the management of disks on nodes. It can abstract the disk on the node into a resource and can be monitored and managed. It's a daemon that will be deployed on each node, then detect the disk on the node, abstract it into local disk (LD) resources and save it to kubernetes.",source:"@site/docs/01features/01local-disk-manager.md",sourceDirName:"01features",slug:"/01features/01local-disk-manager",permalink:"/docs/01features/01local-disk-manager",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/01features/01local-disk-manager.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Local Storage",permalink:"/docs/01features/00local-storage"},next:{title:"HwameiStor Scheduler",permalink:"/docs/01features/02scheduler"}},c={},p=[{value:"Concepts",id:"concepts",level:2},{value:"Usage",id:"usage",level:2},{value:"Install Local Disk Manager",id:"install-local-disk-manager",level:2},{value:"1. Clone this repo to your machine:",id:"1-clone-this-repo-to-your-machine",level:3},{value:"2. Change to deploy directory:",id:"2-change-to-deploy-directory",level:3},{value:"3. Deploy CRDs and run local-disk-manager",id:"3-deploy-crds-and-run-local-disk-manager",level:3},{value:"3.1 Deploy LD and LDC CRDs",id:"31-deploy-ld-and-ldc-crds",level:4},{value:"3.2 Deploy RBAC CRs and operators",id:"32-deploy-rbac-crs-and-operators",level:4},{value:"4. Get LocalDisk infomation",id:"4-get-localdisk-infomation",level:3},{value:"5. Claim Available Disks",id:"5-claim-available-disks",level:3},{value:"5.1 Apply a LocalDiskClaim",id:"51-apply-a-localdiskclaim",level:4},{value:"5.2 Get LocalDiskClaim infomation",id:"52-get-localdiskclaim-infomation",level:4},{value:"Roadmap",id:"roadmap",level:2},{value:"Feedback",id:"feedback",level:2}],u={toc:p};function m(e){var t=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-disk-manager-ldm"},"Local Disk Manager (LDM)"),(0,r.kt)("p",null,"Local Disk Manager (LDM) is one of modules of HwameiStor. ",(0,r.kt)("inlineCode",{parentName:"p"},"LDM")," is to simplify the management of disks on nodes. It can abstract the disk on the node into a resource and can be monitored and managed. It's a daemon that will be deployed on each node, then detect the disk on the node, abstract it into local disk (LD) resources and save it to kubernetes."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"LDM architecture",src:a(3990).Z,width:"1210",height:"481"})),(0,r.kt)("p",null,"At present, the LDM project is still in the ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha")," stage."),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("p",null,"LocalDisk(LD): LDM abstracts disk resources into objects in k8s. A ",(0,r.kt)("inlineCode",{parentName:"p"},"LD")," resource object represents the disk resources on the host."),(0,r.kt)("p",null,"LocalDiskClaim (",(0,r.kt)("inlineCode",{parentName:"p"},"LDC"),"): The way to use disk, Users can add a description of the disk to select the disk to be used."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"At present, LDC supports the following disk description options:"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"NodeName"),(0,r.kt)("li",{parentName:"ul"},"Capacity"),(0,r.kt)("li",{parentName:"ul"},"DiskType (e.g. HDD/SSD)"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"If you want to entirely deploy HwameiStor, please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/02installation/01helm-chart"},"Usage With Helm Chart"),"."),(0,r.kt)("p",null,"If you just want to deploy LDM separately, you can refer to the following installation steps."),(0,r.kt)("h2",{id:"install-local-disk-manager"},"Install Local Disk Manager"),(0,r.kt)("h3",{id:"1-clone-this-repo-to-your-machine"},"1. Clone this repo to your machine:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/hwameistor/local-disk-manager.git\n")),(0,r.kt)("h3",{id:"2-change-to-deploy-directory"},"2. Change to deploy directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd deploy\n")),(0,r.kt)("h3",{id:"3-deploy-crds-and-run-local-disk-manager"},"3. Deploy CRDs and run local-disk-manager"),(0,r.kt)("h4",{id:"31-deploy-ld-and-ldc-crds"},"3.1 Deploy LD and LDC CRDs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f deploy/crds/\n")),(0,r.kt)("h4",{id:"32-deploy-rbac-crs-and-operators"},"3.2 Deploy RBAC CRs and operators"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f deploy/\n")),(0,r.kt)("h3",{id:"4-get-localdisk-infomation"},"4. Get LocalDisk infomation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get localdisk\n10-6-118-11-sda    10-6-118-11                             Unclaimed\n10-6-118-11-sdb    10-6-118-11                             Unclaimed\n")),(0,r.kt)("p",null,"Get locally discovered disk resource information. There are four columns of information."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NAME:")," represents how this disk is displayed in the cluster resources."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NODEMATCH:")," indicates which host this disk is on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CLAIM:")," indicates which ",(0,r.kt)("inlineCode",{parentName:"li"},"Claim")," statement this disk is used by."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PHASE:")," represents the current state of the disk.")),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"kuebctl get localdisk <name> -o yaml")," to view more information about disks."),(0,r.kt)("h3",{id:"5-claim-available-disks"},"5. Claim Available Disks"),(0,r.kt)("h4",{id:"51-apply-a-localdiskclaim"},"5.1 Apply a LocalDiskClaim"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# kubectl apply -f deploy/samples/hwameistor.io_v1alpha1_localdiskclaim_cr.yaml\n")),(0,r.kt)("p",null,"Allocate available disks by issuing a disk usage request. In the description of the request, you can add disk requirements, such as disk type and disk capacity."),(0,r.kt)("h4",{id:"52-get-localdiskclaim-infomation"},"5.2 Get LocalDiskClaim infomation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# kubectl get localdiskclaim <name>\n")),(0,r.kt)("p",null,"Check the status of ",(0,r.kt)("inlineCode",{parentName:"p"},"Claim"),". If there is a disk available, you will see that the status is ",(0,r.kt)("inlineCode",{parentName:"p"},"Bound")," and the status is on the corresponding localdisk is Claimed and points to the claim that references the disk."),(0,r.kt)("h2",{id:"roadmap"},"Roadmap"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Release"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CSI for disk volume"),(0,r.kt)("td",{parentName:"tr",align:null},"Planed"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CSI")," driver for provisioning Local PVs with bare ",(0,r.kt)("inlineCode",{parentName:"td"},"Disk"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Disk management"),(0,r.kt)("td",{parentName:"tr",align:null},"Planed"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Disk management, disk allocation, disk event aware processing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Disk health management"),(0,r.kt)("td",{parentName:"tr",align:null},"Planed"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Disk health management")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HA disk Volume"),(0,r.kt)("td",{parentName:"tr",align:null},"Planed"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"HA disk Volume")))),(0,r.kt)("h2",{id:"feedback"},"Feedback"),(0,r.kt)("p",null,"If any question, submit your feedback and issue via ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hwameistor/local-disk-manager/issues"},"Issues"),"."))}m.isMDXComponent=!0},3990:function(e,t,a){t.Z=a.p+"assets/images/ldm-b9dcc807d2b395c426569e542d4f5983.png"}}]);