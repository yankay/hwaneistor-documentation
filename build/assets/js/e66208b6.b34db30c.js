"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5601],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||o;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4102:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={sidebar_position:2},s="Deploy by Helm Chart",c={unversionedId:"02installation/01helm-chart",id:"02installation/01helm-chart",title:"Deploy by Helm Chart",description:"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts.",source:"@site/docs/02installation/01helm-chart.md",sourceDirName:"02installation",slug:"/02installation/01helm-chart",permalink:"/docs/02installation/01helm-chart",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02installation/01helm-chart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/docs/02installation/00prepare"},next:{title:"Independent Installation",permalink:"/docs/02installation/02install"}},p={},u=[{value:"Procedure",id:"procedure",level:2}],m={toc:u};function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-by-helm-chart"},"Deploy by Helm Chart"),(0,o.kt)("p",null,"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts."),(0,o.kt)("p",null,"This functionality is in alpha and is subject to change. The code is provided as-is with no warranties. Alpha features are not subject to the support SLA of official GA features."),(0,o.kt)("h2",{id:"procedure"},"Procedure"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1: "),"Install HwameiStor"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," must be installed to use the charts. Please refer to Helm's ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/docs/"},"documentation")," to get started."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/hwameistor/helm-charts.git \n$ cd helm-charts/charts \n$ helm install hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,o.kt)("p",null,"Or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm repo add hwameistor http://hwameistor.io/helm-charts \n$ helm install hwameistor/hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,o.kt)("p",null,"You can then run ",(0,o.kt)("inlineCode",{parentName:"p"},"helm search repo hwameistor")," to see the charts."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2: "),"Enable HwameiStor on Node"),(0,o.kt)("p",null,"Once the Helm charts was installed. You should enable HwameiStor on specific nodes as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl label node <node-name> "lvm.hwameistor.io/enable=true"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3: "),"Claim Disk by Type on Node"),(0,o.kt)("p",null,"Then claim disk for your local-storage by apply LocalDiskClaim CR:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"cat > ./local-disk-claim.yaml <<- EOF\napiVersion: hwameistor.io/v1alpha1\nkind: LocalDiskClaim\nmetadata:\n  name: <anyname>\n  namespace: hwameistor\nspec:\n  nodeName: <node-name>\n  description:\n    diskType: <HDD or SSD or NVMe>\nEOF\n")),(0,o.kt)("p",null,"Congratulations! HwameiStor is now deployed on your cluster."))}h.isMDXComponent=!0}}]);